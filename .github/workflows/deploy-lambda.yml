name: Deploy Lambda Functions and Docker Image

on:
  push:
    paths:
      - "src/**"
    branches: [ master ]

jobs:
  final-activator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest boto3
          pip install -r requirements.txt
        working-directory: ./src/final_activator

      - name: Run tests
        env:
          TEST_MODE: 'true'
          aws_access_key_id: 'test_key'
          aws_secret_access_key: 'test_secret'
        run: |
          pytest tests/test_lambda_function_activator.py -v
        continue-on-error: false

      - name: Install zip
        if: success()  # Only proceed if tests passed
        run: sudo apt-get install -y zip

      - name: Create Zip file
        if: success()  # Only proceed if tests passed
        run: |
          cd src/final_activator
          zip -r code.zip .

      - name: Configure AWS Credentials
        if: success()  # Only proceed if tests passed
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: AWS CLI upload
        if: success()  # Only proceed if tests passed
        run: |
          aws lambda update-function-code --function-name arn:aws:lambda:us-east-1:204597968057:function:yotam-finel-activator --zip-file fileb://src/final_activator/code.zip

      - name: Notify via SNS
        if: always()  # Run this step regardless of previous step outcomes
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            message="Deployment status of final-activator Lambda: success"
          else
            message="Deployment status of final-activator Lambda: failed (tests or deployment failed)"
          fi
          aws sns publish --topic-arn arn:aws:sns:us-east-1:204597968057:roeyandyotam-lambdas --message "$message"

  final-logexporter:
    runs-on: ubuntu-latest
    needs: []  # Explicitly specify no dependencies
    steps:
      - uses: actions/checkout@v4

      - name: Install zip
        run: sudo apt-get install -y zip

      - name: Create Zip file
        run: |
          cd src/final-logexporter
          zip -r code.zip .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: AWS CLI upload
        run: |
          aws lambda update-function-code --function-name arn:aws:lambda:us-east-1:204597968057:function:yotam-finel-logexporter --zip-file fileb://src/final-logexporter/code.zip

      - name: Notify via SNS
        run: |
          aws sns publish --topic-arn arn:aws:sns:us-east-1:204597968057:roeyandyotam-lambdas --message "Deployment status of final-logexporter Lambda: success"

  model-image:
    runs-on: ubuntu-latest
    needs: []  # Explicitly specify no dependencies
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: "us-east-1"  # Explicitly specify the region here

      - name: Build Docker image
        run: |
          docker build --platform linux/amd64 -t model-image src/model_image

      - name: Tag Docker image
        run: |
          docker tag model-image:latest 204597968057.dkr.ecr.us-east-1.amazonaws.com/yotam-tree-image:latest

      - name: Push Docker image to ECR
        run: |
          docker push 204597968057.dkr.ecr.us-east-1.amazonaws.com/yotam-tree-image:latest

      - name: Deploy Lambda using container image
        run: |
          aws lambda update-function-code --function-name arn:aws:lambda:us-east-1:204597968057:function:yotam-finel-model --image-uri 204597968057.dkr.ecr.us-east-1.amazonaws.com/yotam-tree-image:latest

      - name: Notify via SNS
        run: |
          aws sns publish --topic-arn arn:aws:sns:us-east-1:204597968057:roeyandyotam-lambdas --message "Deployment status of model-image Lambda: success"